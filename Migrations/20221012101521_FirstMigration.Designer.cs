// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using csharp_boolflix.Controllers.Context;

#nullable disable

namespace csharp_boolflix.Migrations
{
    [DbContext(typeof(BoolflixDbContext))]
    [Migration("20221012101521_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ActorMediaInfo", b =>
                {
                    b.Property<int>("CastId")
                        .HasColumnType("int");

                    b.Property<int>("MediaInfosId")
                        .HasColumnType("int");

                    b.HasKey("CastId", "MediaInfosId");

                    b.HasIndex("MediaInfosId");

                    b.ToTable("ActorMediaInfo");
                });

            modelBuilder.Entity("csharp_boolflix.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("csharp_boolflix.Models.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TvSeriesId")
                        .HasColumnType("int");

                    b.Property<int>("VisualizationCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TvSeriesId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("csharp_boolflix.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("csharp_boolflix.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PegiId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisualizationCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PegiId");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("csharp_boolflix.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("csharp_boolflix.Models.Pegi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pegi");
                });

            modelBuilder.Entity("FeatureMediaInfo", b =>
                {
                    b.Property<int>("FeaturesId")
                        .HasColumnType("int");

                    b.Property<int>("MediaInfosId")
                        .HasColumnType("int");

                    b.HasKey("FeaturesId", "MediaInfosId");

                    b.HasIndex("MediaInfosId");

                    b.ToTable("FeatureMediaInfo");
                });

            modelBuilder.Entity("GenreMediaInfo", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.Property<int>("MediaInfosId")
                        .HasColumnType("int");

                    b.HasKey("GenresId", "MediaInfosId");

                    b.HasIndex("MediaInfosId");

                    b.ToTable("GenreMediaInfo");
                });

            modelBuilder.Entity("MediaInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FilmId")
                        .HasColumnType("int");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<int?>("TvSeriesId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilmId")
                        .IsUnique()
                        .HasFilter("[FilmId] IS NOT NULL");

                    b.HasIndex("TvSeriesId")
                        .IsUnique()
                        .HasFilter("[TvSeriesId] IS NOT NULL");

                    b.ToTable("MediaInfos");
                });

            modelBuilder.Entity("TvSerie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PegiId")
                        .HasColumnType("int");

                    b.Property<int>("SeasonsCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisualizationCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PegiId");

                    b.ToTable("TvSeries");
                });

            modelBuilder.Entity("ActorMediaInfo", b =>
                {
                    b.HasOne("csharp_boolflix.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("CastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MediaInfo", null)
                        .WithMany()
                        .HasForeignKey("MediaInfosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("csharp_boolflix.Models.Episode", b =>
                {
                    b.HasOne("TvSerie", "TvSeries")
                        .WithMany("Episodes")
                        .HasForeignKey("TvSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TvSeries");
                });

            modelBuilder.Entity("csharp_boolflix.Models.Film", b =>
                {
                    b.HasOne("csharp_boolflix.Models.Pegi", "Pegi")
                        .WithMany("Films")
                        .HasForeignKey("PegiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pegi");
                });

            modelBuilder.Entity("FeatureMediaInfo", b =>
                {
                    b.HasOne("csharp_boolflix.Models.Feature", null)
                        .WithMany()
                        .HasForeignKey("FeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MediaInfo", null)
                        .WithMany()
                        .HasForeignKey("MediaInfosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenreMediaInfo", b =>
                {
                    b.HasOne("csharp_boolflix.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MediaInfo", null)
                        .WithMany()
                        .HasForeignKey("MediaInfosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MediaInfo", b =>
                {
                    b.HasOne("csharp_boolflix.Models.Film", "Film")
                        .WithOne("MediaInfo")
                        .HasForeignKey("MediaInfo", "FilmId");

                    b.HasOne("TvSerie", "TvSeries")
                        .WithOne("MediaInfo")
                        .HasForeignKey("MediaInfo", "TvSeriesId");

                    b.Navigation("Film");

                    b.Navigation("TvSeries");
                });

            modelBuilder.Entity("TvSerie", b =>
                {
                    b.HasOne("csharp_boolflix.Models.Pegi", "Pegi")
                        .WithMany("TVSeries")
                        .HasForeignKey("PegiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pegi");
                });

            modelBuilder.Entity("csharp_boolflix.Models.Film", b =>
                {
                    b.Navigation("MediaInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("csharp_boolflix.Models.Pegi", b =>
                {
                    b.Navigation("Films");

                    b.Navigation("TVSeries");
                });

            modelBuilder.Entity("TvSerie", b =>
                {
                    b.Navigation("Episodes");

                    b.Navigation("MediaInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
